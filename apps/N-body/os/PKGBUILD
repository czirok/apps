pkgname=nbody
pkgver=$(cat ../VERSION)
pkgrel=1
pkgdesc="N-body gravitational simulation"
arch=('x86_64')
url="https://github.com/czirok/apps/"
license=('CC BY 4.0')
depends=('cairo' 'libadwaita' 'gdk-pixbuf2')

source=(
    "LICENSE"
    "nbody"
    "nbody.desktop" 
    "nbody.svg"
    "libSkiaSharp.so"
    "appsettings.json"
    "org.gnome.nbody.gschema.xml"
    "I18N.tar.gz"
)

sha256sums=(
    'SKIP'
    'SKIP'
    'SKIP'
    'SKIP'
    'SKIP'
    'SKIP'
    'SKIP'
    'SKIP'
)

package() {
    # Create app directory
    mkdir -p "$pkgdir/usr/share/nbody/I18N/App"

    # Copy license
    install -Dm644 "$srcdir/LICENSE" "$pkgdir/usr/share/nbody/LICENSE"

    # Executable
    install -Dm755 "$srcdir/nbody" "$pkgdir/usr/share/nbody/nbody"

    # Desktop and icon files
    install -Dm644 "$srcdir/nbody.desktop" "$pkgdir/usr/share/applications/org.gnome.nbody.desktop"
    install -Dm644 "$srcdir/nbody.svg" "$pkgdir/usr/share/icons/hicolor/scalable/apps/org.gnome.nbody.svg"

    # Library
    install -Dm644 "$srcdir/libSkiaSharp.so" "$pkgdir/usr/share/nbody/libSkiaSharp.so"

    # Configuration
    install -Dm644 "$srcdir/appsettings.json" "$pkgdir/usr/share/nbody/appsettings.json"

    # GSettings schema
    install -Dm644 "$srcdir/org.gnome.nbody.gschema.xml" "$pkgdir/usr/share/glib-2.0/schemas/org.gnome.nbody.gschema.xml"

    # I18N files - culture settings
    tar -xf "$srcdir/I18N.tar.gz" -C "$pkgdir/usr/share/nbody/"
    
    # Wrapper script /usr/bin/nbody
    mkdir -p "$pkgdir/usr/bin"
    cat > "$pkgdir/usr/bin/nbody" << 'EOF'
#!/bin/bash
exec /usr/share/nbody/nbody "$@"
EOF
    chmod 755 "$pkgdir/usr/bin/nbody"
}

post_install() {
    echo "Updating icon cache..."
    gtk-update-icon-cache -q -t -f /usr/share/icons/hicolor
    echo "Compiling GSettings schemas..."
    glib-compile-schemas /usr/share/glib-2.0/schemas
}

post_upgrade() {
    post_install
}

post_remove() {
    echo "Updating icon cache..."
    gtk-update-icon-cache -q -t -f /usr/share/icons/hicolor
    echo "Compiling GSettings schemas..."
    glib-compile-schemas /usr/share/glib-2.0/schemas
}